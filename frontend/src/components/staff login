import React, { useState } from 'react';
import './css/StaffLogin.css';

const StaffLogin = ({ onLoginSuccess }) => {
    const [formData, setFormData] = useState({
        username: '',
        password: ''
    });
    const [error, setError] = useState('');
    const [loading, setLoading] = useState(false);

    const handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value
        });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setError('');
        setLoading(true);

        try {
            const response = await fetch('http://localhost:8070/staff/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });

            const data = await response.json();

            if (response.ok) {
                // Store staff data in localStorage
                localStorage.setItem('staffData', JSON.stringify(data.staff));
                // Call the callback to redirect to staff dashboard
                onLoginSuccess();
            } else {
                setError(data.message || 'Login failed');
            }
        } catch (error) {
            setError('Network error. Please try again.');
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="staff-login-container">
            <div className="login-content">
                <div className="logo-section">
                    <div className="logo">
                        <div className="logo-icon">
                           <img src="/MSQ.jpg" alt="Logo" />
                        </div>
                    </div>
                </div>
                
                <div className="login-section">
                    <h1 className="login-title">STAFF LOGIN</h1>
                    
                    <form onSubmit={handleSubmit} className="login-form">
                        {error && <div className="error-message">{error}</div>}
                        
                        <div className="input-group">
                            <input
                                type="text"
                                name="username"
                                placeholder="Username"
                                value={formData.username}
                                onChange={handleChange}
                                required
                                className="login-input"
                            />
                        </div>
                        
                        <div className="input-group">
                            <input
                                type="password"
                                name="password"
                                placeholder="Password"
                                value={formData.password}
                                onChange={handleChange}
                                required
                                className="login-input"
                            />
                        </div>
                        
                        <button 
                            type="submit" 
                            className="login-button"
                            disabled={loading}
                        >
                            {loading ? 'LOGGING IN...' : 'LOGIN'}
                        </button>
                    </form>
                </div>
            </div>
        </div>
    );
};

export default StaffLogin;




